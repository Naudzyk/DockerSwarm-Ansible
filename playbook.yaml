---
- name: Set up Docker Swarm Overlay Network
  hosts: all
  become: yes
  vars:
    overlay_network_name: my_overlay_net
    overlay_subnet: 10.0.9.0/24
    swarm_manager: 192.168.56.105
    venv_path: /opt/condor_venv  # Путь для виртуального окружения
  tasks:
    # 0. Установка Docker и зависимостей
    - name: Install Docker and Python packages
      apt:
        name:
          - docker.io
          - python3-venv  # Для создания виртуального окружения
          - python3-docker  # Системный пакет Docker SDK (если доступен)
        state: present
        update_cache: yes
      when: ansible_pkg_mgr == "apt"

    # 1. Создание виртуального окружения
    - name: Create virtual environment
      shell: |
        python3 -m venv {{ venv_path }}
        {{ venv_path }}/bin/pip install --upgrade pip
      args:
        creates: "{{ venv_path }}/bin/pip"
      when: ansible_pkg_mgr == "apt"

    # 2. Установка Docker SDK в виртуальное окружение
    - name: Install Docker Python module in venv
      pip:
        name: docker
        virtualenv: "{{ venv_path }}"
      when: ansible_pkg_mgr == "apt"

    # 3. Инициализация Swarm
    - name: Initialize Docker Swarm
      docker_swarm:
        state: present
        advertise_addr: "{{ swarm_manager }}"
      when: inventory_hostname == swarm_manager
      register: swarm_init

    - name: Initialize Docker Swarm
      docker_swarm:
        state: present
        advertise_addr: "{{ swarm_manager }}"
      when: inventory_hostname == swarm_manager
      register: swarm_init

    # Получение токена для воркеров
    - name: Get worker join token
      shell: docker swarm join-token worker -q
      register: worker_token
      delegate_to: "{{ swarm_manager }}"
      when: inventory_hostname != swarm_manager

    # Присоединение воркеров к Swarm
    - name: Join workers to Swarm
      docker_swarm:
        state: join
        join_token: "{{ worker_token.stdout }}"
        remote_addrs: "{{ swarm_manager }}:2377"
      when: inventory_hostname != swarm_manager

    # Создание Overlay-сети
    - name: Create Overlay network
      docker_network:
        name: "{{ overlay_network_name }}"
        driver: overlay
        ipam_config:
          - subnet: "{{ overlay_subnet }}"
        attachable: yes
      delegate_to: "{{ swarm_manager }}"
      run_once: true

    # Открытие портов для Swarm и Overlay
    - name: Allow Docker Swarm ports
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 2377  # Swarm management
        - 7946  # Node communication
        - 4789  # Overlay network traffic
      when: ansible_os_family == "Debian"

    # Перезагрузка Docker для применения настроек
    - name: Restart Docker
      service:
        name: docker
        state: restarted
